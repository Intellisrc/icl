import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

dependencies {
    def os = DefaultNativePlatform.currentOperatingSystem
    def arch = DefaultNativePlatform.currentArchitecture

    api project(':etc')
    api project(':net')
    //https://github.com/intellisrc/spark
    // We use Response, Request... so we use 'api' here:
    api 'com.intellisrc:spark-core:2.9.4-unofficial-4'
    //api 'org.eclipse.jetty.websocket:websocket-client:9.4.51.v20230217'

    // NOTE: To enable Brotli compression, you may need to add this to your project:
    // implementation "com.nixxcode.jvmbrotli:jvmbrotli:$jvmbrotli"
    // And depending on your platform:
    // implementation "com.nixxcode.jvmbrotli:jvmbrotli-linux-x86-amd64:$jvmbrotli""
    //
    // The following enables Brotli only during development (automatically detecting your development platform):
    def jvmbrotli = "0.2.0"
    def jvmBrotliMain = "com.nixxcode.jvmbrotli:jvmbrotli:$jvmbrotli"
    def jvmBrotliLib = ""
    switch (true) {
        case os.windows && arch.i386:
            jvmBrotliLib = "com.nixxcode.jvmbrotli:jvmbrotli-win32-x86:$jvmbrotli"
            break
        case os.windows && arch.amd64:
            jvmBrotliLib = "com.nixxcode.jvmbrotli:jvmbrotli-win32-x86-amd64:$jvmbrotli"
            break
        case os.macOsX && arch.amd64:
            jvmBrotliLib = "com.nixxcode.jvmbrotli:jvmbrotli-darwin-x86-amd64:$jvmbrotli"
            break
        case os.linux && arch.amd64:
            jvmBrotliLib = "com.nixxcode.jvmbrotli:jvmbrotli-linux-x86-amd64:$jvmbrotli"
            break
        default:
            println "No suitable driver of Brotli found for current " +
                "OS (${os.displayName}) and architecture (${arch.displayName}). Brotli will be disabled."
    }
    compileOnly jvmBrotliMain
    testImplementation jvmBrotliMain
    if(jvmBrotliLib) {
        compileOnly jvmBrotliLib
        testImplementation jvmBrotliLib
    }
}